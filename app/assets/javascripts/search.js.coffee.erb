# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

#TODO: Handle more error cases in AJAX
#TODO: Try doing this with the helpers from:
#      http://edgeguides.rubyonrails.org/working_with_javascript_in_rails.html#a-simple-example
#
$ ->
  #TODO: DRY the handlers
  loading = () ->
    $('.loading').show()
    $('.pagination').show()
  loaded = () ->
    $('.pagination').hide()
    $('.loading').hide()
  buildRequestHTML = ( requestData, picture, title, rt_id ) ->
    html = "<li class='well well-sm'>"
    html += "<a href='#' class='unbuilt" + rt_id + "' id='" + requestData + "'><img src='" + picture + "' class='img-circle'></a>"
    html += title
    add = "<button class='btn btn-success'><a class='add" + rt_id
    add += "'  id='"+ requestData + "' href='#'>Add</a></button></li>"
    html += add
    # html = "<a href='#' class='unbuilt' id='"
    # html += requestData + "'><img src='" + movie["posters"]["detailed"] + "' class='img-circle'><li>"
    # html += movie['title'] + "</li></a>"
    # add = "<a class='add'  id='" + requestData + "' href='#'>Add</a><br>"
    # add = $("#add" + movie['id'])
    # + "</li></a>"
    return html
  buildAttachedHTML = ( picture, title, id ) ->
    html = "<li class='well well-sm'>"
    html += "<a href='/entries/" + id + "'><img src='" + picture + "' class='img-circle'></a>"
    html += title
    add = "<button class='btn btn-success add" + id + "'><a class='add"
    add += "'  id='"+ id + "' href='#'>Add</a></button></li>"
    html += add
    return html
  appendEntryHTML = ( data ) ->
    if data['thumbnail_file_name'] != null
      photo = data['thumbnail_file_name']
    else
      photo = '/assets/thumb/missing.png'
    html = "<li class='well well-sm'><a href='/entries/" + data['id'] + "'><img alt='Missing' src='" + photo + "' class='img-circle''>"
    html += "</a>" + data['title'] + "<a class='deleteEntry' id='deleteTmp" + data['id'] + "' data-method='delete' data-remote='true' href='/entries/"
    html += data['id'] + "' rel='nofollow'>"
    html += "<i class='fa fa-trash-o fa-2x'></i></a>"
    html = $(html)
    $('.backlog').prepend(html)
    del = $('#deleteTmp' + data['id'])
    del.click(() ->
      html.hide())
  addHandler = ( event ) ->
    event.preventDefault()
    url = '/entries/add/' + @.childNodes[0].id
    $.get(url, {id: @.id, append: true}).done ( data ) ->
      appendEntryHTML(data)
  buildHandler = ( event ) ->
    event.preventDefault()
    loading()
    values = @.id.split("~~")
    clickedElement = @
    if values[2] == undefined then values[2] = ""
    if values[1] == "" then values[1] = "No description"
    url = "/backlog/unbuilt/"
    $.get(url,  {movie_info: values} ).done ( data ) ->
      loaded()
      #TODO: Make the class unbuilt more descriptive
      if clickedElement.className.substring(0,7) == 'unbuilt'
        window.location.replace("/entries/" + data['id'])
      else if clickedElement.className.substring(0,3) == 'add'
        #create a request to add it to the backlog
        url = '/entries/add/' + data['id']
        $.get(url, { id: data['id'], append: true } ).done ( data ) ->

          #append it on success
          appendEntryHTML(data)
  followHandler = ( event ) ->
    event.preventDefault()
    url = '/users/follow/' + @.id
    $.get(url, { id: @.id }).done ( data ) ->
  appendControllerData = ( data, type, list ) ->
    loaded()
    max = 5
    if type == 'entries'
      for k,v of data
        if max > 0
          picture = v['thumbnail_file_name']
          if picture == null then picture = ""
          html = buildAttachedHTML(picture, v['title'], v['id'])
          html = $(html)
          list.append(html)
          addAnchor = $(".add" + v['id'])
          addAnchor.click(addHandler)
          max--
    else
      max = 5
      for k,v of data
        amazonPath = "http://s3.amazonaws.com/zappcord/users/avatars/000/000/"
        #TODO: logic for amazons file path here, once there are too many users just appending '00' won't work
        amazonPath = amazonPath + "00" + v['id'] + "/thumb/" + v['avatar_file_name']
        add = "<a href='#' class='follow' id='" + v['id'] + "'>Follow</a><br>"
        html = "<a href='users/" + v['id'] + "'><img src='" + amazonPath + "' class='img-circle'></a><li id='"
        html += v['id'] + "'>" + v['name'] + "</li>"
        add = $(add)
        list.append(html)
        list.append(add)
        add.click(followHandler)
  window.appendRequestData = ( data ) ->
    loaded()
    list = $('#list') #TODO: find a way to pass this to the callback
    for movie in data["movies"]
      #Create the data
      alternate = movie['alternate_ids']
      if alternate != undefined then imdb = alternate['imdb'] else imdb = "unknown"
      requestData = movie['title'] + "~~" + movie['synopsis'].replace(/'/g, "")
      requestData += "~~" + imdb + "~~" + movie['posters']['detailed']
      #Build the html
      html = buildRequestHTML(requestData, movie["posters"]["detailed"], movie['title'], movie['id'])
      list.append(html)
      show = $('.unbuilt' + movie['id'])
      add = $(".add"+ movie['id'])
      show.click(buildHandler)
      add.click(buildHandler)

  $('.depth').on 'click', ( event ) ->
    loading()
    @.parent().hide()
  $('a#deleteTmp').on 'click', ( event ) ->
  $('#search').on 'keypress', ( event ) ->
    keycode = event.keyCode
    # type = $('input[name=group]:checked').val()
    type = "entries"
    if window.location.pathname == "/users/following" then type = "users"
    searchValue = $('#search').children().first().val()
    url = "/search/" + type + "/" + searchValue + "/no"
    list = $('#list')
    entries = list.children()
    entry.remove() for entry in entries
    loaded()
    if keycode == 13 && type == 'entries'
      event.preventDefault()
      # entry.remove() for entry in entries
      loading()
      pageLimit = "&page_limit=5"
      if window.location.pathname == '/search' then pageLimit = "&page_limit=10"
      url = "http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey=<%= ENV['ROTTEN_TOMATOES_KEY'] %>&q="
      url += encodeURI(searchValue)
      url += pageLimit
      url += "&callback=appendRequestData"
      $.ajax url,
        type: 'GET',
        crossDomain: true,
        dataType: 'jsonp',
        jsonpCallback: 'appendRequestData',
        error: ( jqXHR, textStatus, errorThrown ) ->
          alert "AJAX Error: #{textStatus}"
    else if ((url != 'search/users/') && (url != 'search/entries/') && url != ('search/entries//no') && (url != '/null'))
      loading()
      $.ajax url,
        type: 'GET',
        error: ( jqXHR, textStatus, errorThrown ) ->
        success: ( data ) ->
          appendControllerData(data, type, list)
    else if list.children().length <= 0
      list.prepend("<p>If we don't have what you're looking for press enter to query rotten tomatoes</p>")
